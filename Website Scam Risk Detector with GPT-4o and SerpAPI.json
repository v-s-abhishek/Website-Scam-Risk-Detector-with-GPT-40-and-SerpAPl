{
  "name": "Website Scam Risk Detector with GPT-4o and SerpAPI",
  "nodes": [
    {
      "parameters": {
        "numberInputs": 5
      },
      "id": "789e1efb-5ef3-47fb-b8ac-bf6efc5c15b8",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "position": [
        1408,
        1552
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "output",
              "renameField": true,
              "outputFieldName": "Output 1"
            },
            {
              "fieldToAggregate": "output",
              "renameField": true,
              "outputFieldName": "Output 2"
            },
            {
              "fieldToAggregate": "output",
              "renameField": true,
              "outputFieldName": "Output 3"
            },
            {
              "fieldToAggregate": "output",
              "renameField": true,
              "outputFieldName": "Output 4"
            },
            {
              "fieldToAggregate": "output",
              "renameField": true,
              "outputFieldName": "Output 5"
            }
          ]
        },
        "options": {}
      },
      "id": "7ed37584-2fb0-466d-ae15-2269c5d5ccac",
      "name": "Aggregate1",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        1648,
        1584
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "248ac3a4-9df1-4899-a18a-78d522f4737b",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1872,
        1760
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "Mj5YNImiAAZsBwoR",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "99519e3d-b078-4210-a81f-b14df48d5b67",
      "name": "SerpAPI",
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "position": [
        896,
        1120
      ],
      "typeVersion": 1,
      "credentials": {
        "serpApi": {
          "id": "bpJF9DSRAVwt9ixj",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3f53d0fb-d7de-4d04-b201-a74926922de7",
      "name": "SerpAPI3",
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "position": [
        896,
        1760
      ],
      "typeVersion": 1,
      "credentials": {
        "serpApi": {
          "id": "bpJF9DSRAVwt9ixj",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "d0a5cd93-e446-4250-9d2e-2805a2ec2700",
      "name": "SerpAPI4",
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "position": [
        896,
        2128
      ],
      "typeVersion": 1,
      "credentials": {
        "serpApi": {
          "id": "bpJF9DSRAVwt9ixj",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "cf75cb2a-0975-47c9-b00c-500dbdc1a9dc",
      "name": "OpenAI Chat Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        608,
        1120
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "Mj5YNImiAAZsBwoR",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "d97dd1f9-d37d-49bd-86a5-344876530431",
      "name": "SerpAPI2",
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "position": [
        896,
        1440
      ],
      "typeVersion": 1,
      "credentials": {
        "serpApi": {
          "id": "bpJF9DSRAVwt9ixj",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "904db4ff-31f3-45a0-b1b3-250cff702910",
      "name": "OpenAI Chat Model3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        608,
        1440
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "Mj5YNImiAAZsBwoR",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "gpt-4.1-nano"
        },
        "options": {}
      },
      "id": "7730e1f9-0253-4a67-94a4-92b380e1b427",
      "name": "OpenAI Chat Model4",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        608,
        1760
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "Mj5YNImiAAZsBwoR",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "gpt-4.1-nano"
        },
        "options": {}
      },
      "id": "3e45fb12-bd2c-42df-9368-c8f5e45c1a56",
      "name": "OpenAI Chat Model5",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        608,
        2128
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "Mj5YNImiAAZsBwoR",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "formTitle": "Website URL",
        "formDescription": "https://www.scam.com/",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Website URL"
            }
          ]
        },
        "options": {}
      },
      "id": "6568b119-2252-46eb-805e-4f8ef0c24528",
      "name": "On form submission",
      "type": "n8n-nodes-base.formTrigger",
      "position": [
        -112,
        1584
      ],
      "webhookId": "ac2c1634-e0db-4595-a463-b87bcd539046",
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json['Website URL'] }}",
        "options": {
          "systemMessage": "=#Role\nYou are an agent whose goal is to assist in determining whether a website is likely to be fraudulent or a scam. You are an expert at evaluating websites for this purpose. You will receive a URL: {{ $json['Website URL'] }}.\n\nYou should use Google Shopping via the Google Search (SERPAPI) tool to obtain the most relevant and accurate information.\n\nYou should provide information on the domain age â€” anything less than 6 months is considered a red flag.\n\nYou should also identify suspicious or cheap top-level domains (TLDs) such as .xyz, .top, .click, or .site, which are less trusted than common ones like .co, .com, or .org.\n\nFinally, examine the SSL certificate. A lack of HTTPS (i.e., using only HTTP) is a red flag.\n\n#Constraints: Only provide information on the above tasks. \n"
        }
      },
      "id": "0bec4863-2c5d-4b9a-95f3-26f6e5653e7d",
      "name": "Domain & Technical Details",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        672,
        944
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json['Website URL'] }}",
        "options": {
          "systemMessage": "=#Role\nYou are an agent whose goal is to assist in determining whether a website is likely to be fraudulent or a scam. You are an expert at evaluating websites for this purpose. You will receive a URL: {{ $json['Website URL'] }}.\n\nYou should use Google Shopping via the Google Search (SERPAPI) tool to obtain the most relevant and accurate information.\n\nYou should provide information on whether there are scam reports or warnings on forums like Reddit, Trustpilot, ScamAdviser, or SiteJabber.\n\nCheck whether the website has very low ratings or numerous complaints.\n\nAlso, determine whether multiple people are searching to find out if the website is a scam.\n\n#Constraints: Only provide information on the above tasks."
        }
      },
      "id": "548e3162-c27c-4798-adcd-55d9a9a30f2f",
      "name": "Search Engine Signals",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        672,
        1264
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json['Website URL'] }}",
        "options": {
          "systemMessage": "=#Role\nYou are an agent whose goal is to assist in determining whether a website is likely to be fraudulent or a scam. You are an expert at evaluating websites for this purpose. You will receive a URL: {{ $json['Website URL'] }}.\n\nYou should use Google Shopping via the Google Search (SERPAPI) tool to obtain the most relevant and accurate information.\n\nYou should evaluate for exaggerated discounts, false claims, or fake endorsements.\n\nYou should look for high-end brands being sold at unusually low prices.\n\n#Constraints: Only provide information on the above tasks."
        }
      },
      "id": "2bde92d2-b3db-4457-91d5-29004e9a7c42",
      "name": "Product & Pricing Patterns",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        688,
        1584
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json['Website URL'] }}",
        "options": {
          "systemMessage": "=#Role\nYou are an agent whose goal is to assist in determining whether a website is likely to be fraudulent or a scam. You are an expert at evaluating websites for this purpose. You will receive a URL: {{ $json['Website URL'] }}.\n\nYou should use Google Shopping via the Google Search (SERPAPI) tool to obtain the most relevant and accurate information.\n\nYou should evaluate the reviews and look for duplicates, vague language, or identical phrasing.\n\nYou should look for poor grammar on the website.\n\nYou should evaluate whether there is a lack of company information or a fake address.\n\n#Constraints: Only provide information on the above tasks."
        }
      },
      "id": "3ba84a39-ded0-4576-9038-c555111ebde2",
      "name": "Content Analysis",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        672,
        1952
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "content": "Create an Open AI key:\n-Create an Open AI account. \n-Go to platform.openai.com/api-keysAfter creating an account, click on your name in the top right corner. \n-Click on your profile.\n-On the left side click on API keys.\n-Create a new secret key.\n-Give it a name (optional).\n-Create secret key and copy.\n-Open the n8n workflow.\n-Right click and open the first OpenAI chat model under Evaluator tools Agent.\n-Click under credential to connect with and click create new credential.\n-Paste copied API Key in this position in n8n.\n-Use the same API key to open and connect with the OpenAI chat model for the Domain & Technical Details, Search Engine Signals, Product & Pricing Patterns, and Content Analysis Tools Agents.\n-IMPORTANT: This workflow uses GPT-4o and GPT-4o-mini. This cost ~$0.01 per run. You must put money, recommend no more than $5, into your open ai account.\n-Click on your profile again. On left hand side click on billing. Add credit to balance.\n\n-Create SerpiApi account at https://serpapi.com/users/sign_up\n       -After account creation, click on API key and copy it.\n       -Right click open on serp API under the Domain & Technical Details, Search Engine Signals, Product & Pricing Patterns, and Content Analysis tools agent.\n       -Click on credential to connect with.\n       -Copy in API key.\n       -TIP: This workflow uses ~5-15 of the 100 free monthly SerpAPI searches. If you utilize more than 100 searches in a month you can create a new SerpAPI account and connect another API key to the tools agents.\n\n\n\n\nHow to use:\nIn the bottom, click on the on form submission or click the test workflow button. Copy and Past the URL. The workflow will automatically initiate. When it has completed open the Evaluator Tools Agent and click on Logs. Scroll down until you see output. This is your information. It is rated on a scale of 1-10 with 10 being most likely the URL is a scam. I recommend copy and pasting it to a word document for ease of access at a later date. You can always find prior searches by clicking on executions at the top. You then right click and open the Evaluator tools agent. Clicking on logs at the top and you will see the output information again. \n\nDisclaimer:\nThis tool is designed to assist in evaluating the potential risk of websites using AI-generated insights. The scam likelihood score and analysis provided are based on publicly available information and should not be considered a definitive or authoritative assessment. This tool does not guarantee the accuracy, safety, or legitimacy of any website. Users should perform their own due diligence and use independent judgment before engaging with any site.\n\nN8N, OpenAI, its affiliates, and the creators of this workflow are not responsible for any loss, damages, or consequences arising from the use of this tool or the actions taken based on its results.",
        "height": 680,
        "width": 920,
        "color": 5
      },
      "id": "553d1644-60ad-4637-97ee-2a28179a6822",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        368,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json['Output 1'][0] }}{{ $json['Output 1'][1] }}{{ $json['Output 1'][2] }}{{ $json['Output 1'][3] }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=#Role\nYou are an agent whose goal is to assist in determining whether a website is likely to be fraudulent or a scam. You are an expert at evaluating websites for this purpose. You will receive input from various other agents who have evaluated the website and provided information on whether the website has red flags.\n\nThis input will be:\n{{ $json['Output 1'][0] }} {{ $json['Output 1'][1] }} {{ $json['Output 1'][2] }} {{ $json['Output 1'][3] }}\n\nYour goal is to utilize that information and provide the likelihood that the website is a scam on a scale of 1 to 10 â€” where 10 means almost certainly a scam, and 1 means it appears very trustworthy.\n\nYou should also organize the results from the other agents and provide an overall conclusion about the website.\n\nYou should always include a disclaimer: just because there is a low chance of it being a scam does not mean it is not a scam, and just because there is a high chance of it being a scam does not mean it is not legitimate.\n\nExample output:\n\nDisclaimer: Just because there is a low chance of it being a scam does not mean it is not a scam, and just because there is a high chance of it being a scam does not mean it is not legitimate.\nRisk of website being a scam: 7\n\nDomain and Technical Details:\n{{ $json['Output 1'][0] }}\n\nSearch Engine Signals:\n{{ $json['Output 1'][1] }}\n\nProduct & Pricing Patterns:\n{{ $json['Output 1'][2] }}\n\nContent Analysis:\n{{ $json['Output 1'][3] }}\n\n\n\n\n"
        }
      },
      "id": "1b59caab-bfa3-4d68-9c14-261de6e126c4",
      "name": "Evaluator",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1936,
        1584
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "content": "Limited Warranties\n\nWe do not warrant or represent:\n\nThe completeness or accuracy of the information published from this workflow.\nThat the material generated from this workflow are up to date.\n\nLimitation of liability\n\nWe make no warranties, expressed or implied, and hereby disclaims and negates all other warranties, including without limitation, implied warranties or suitability for a particular purpose. Further, We do not warrant or make any representations concerning the accuracy, likely results, or reliability of the use of the materials on this workflow otherwise relating to such materials.\n\nWe are in no event liable for any damages whatsoever that hold connection or are related to the content published by this workflow or users on the services. Users of the services indemnify us against all claims by third parties.\n\nWe will not be liable to you in respect of any losses arising out of any event or events beyond our reasonable control.\n\nWe will not be liable to you in respect of any business losses, including (without limitation) loss of or damage to profits, income, revenue, use, production, anticipated savings, business, contracts, commercial opportunities or goodwill.\n\nWe will not be liable to you in respect of any loss or corruption of any data, database or software.\n\nWe will not be liable to you in respect of any special, indirect or consequential loss or damage.",
        "height": 580,
        "width": 680
      },
      "id": "2b2bf005-7602-457b-a871-376472dc917e",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1328,
        304
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "Merge1": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI": {
      "ai_tool": [
        [
          {
            "node": "Domain & Technical Details",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI2": {
      "ai_tool": [
        [
          {
            "node": "Search Engine Signals",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI3": {
      "ai_tool": [
        [
          {
            "node": "Product & Pricing Patterns",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI4": {
      "ai_tool": [
        [
          {
            "node": "Content Analysis",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Evaluator": {
      "main": [
        []
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Evaluator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content Analysis": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Evaluator",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "On form submission": {
      "main": [
        [
          {
            "node": "Domain & Technical Details",
            "type": "main",
            "index": 0
          },
          {
            "node": "Search Engine Signals",
            "type": "main",
            "index": 0
          },
          {
            "node": "Product & Pricing Patterns",
            "type": "main",
            "index": 0
          },
          {
            "node": "Content Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Domain & Technical Details",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Search Engine Signals",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Product & Pricing Patterns",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Content Analysis",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Search Engine Signals": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Domain & Technical Details": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Product & Pricing Patterns": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 2
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "d95b1f1f-4dbb-4458-8f5d-c5ee2255ebd5",
  "meta": {
    "templateId": "5614",
    "instanceId": "4b8e46d16e4039ead1a70fbceec58c940f4d6ddff3a37808d68254bf2b6d2313"
  },
  "id": "oXtPxIy5Ly1HiNmZ",
  "tags": []
}